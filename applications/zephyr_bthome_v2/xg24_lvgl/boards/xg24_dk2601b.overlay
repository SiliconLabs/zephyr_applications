/*
 * Copyright (c) 2025 Silicon Laboratories Inc. www.silabs.com
 *
 * SPDX-License-Identifier: Apache-2.0
 */

#include <dt-bindings/clock/silabs/xg24-clock.h>
#include <zephyr/dt-bindings/pinctrl/gecko-pinctrl.h>
#include <zephyr/dt-bindings/input/input-resistive-touchscreen-4wire.h>
#include <zephyr/dt-bindings/display/ili9xxx.h>

/ {
	chosen {
		zephyr,display = &adafruit_2_4_tft_touch_v2_ili9341;
		sw0 = &button0;
		/delete-property/ zephyr,console;
        /delete-property/ zephyr,shell-uart;
	};
	
	aliases {
		touchscreen = &resistive_touch;
	};
 
	adafruit_2_4_tft_mipi_dbi {
		compatible = "zephyr,mipi-dbi-spi";
		spi-dev = <&usart0>;
		#address-cells = <1>;
		#size-cells = <0>;
		status = "okay";
		dc-gpios = <&gpioa 6 GPIO_ACTIVE_HIGH>;
		write-only;
		adafruit_2_4_tft_touch_v2_ili9341: ili9341@1 {
			compatible = "ilitek,ili9341";
			mipi-max-frequency = <20000000>;
			reg = <1>;
			height = <240>;
			width = <320>;
			pixel-format = <ILI9XXX_PIXEL_FORMAT_RGB565>;
			// display-inversion;
			rotation = <90>;
			// mipi-hold-cs;
			pwctrla = [39 2C 00 34 02];
			pwctrlb = [00 C1 30];
			pwseqctrl = [64 03 12 81];
			timctrla = [85 00 78];
			timctrlb = [00 00];
			pumpratioctrl = [20];
			pwctrl1 = [23];
			pwctrl2 = [10];
			gamset = [01];
			frmctr1 = [00 18];
			disctrl = [08 82 27 04];
			vmctrl1 = [3e 28];
			vmctrl2 = [86];
			pgamctrl = [0f 31 2b 0c 0e 08 4e f1 37 07 10 03 0e 09 00];
			ngamctrl = [00 0e 14 03 11 07 31 c1 48 08 0f 0c 31 36 0f];
			status = "okay";
		};
	};

	lvgl_pointer {
		compatible = "zephyr,lvgl-pointer-input";
		input = <&resistive_touch>;
		// swap-xy;
		// invert-x;
		// invert-y;
	};
};

&adc0 {
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;

	channel@0 {
		reg = <0>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_VDD_1";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
		zephyr,input-positive = <(((1 + 8) << 4) | 2)>; // XM = PB2
	};

	channel@1 {
		reg = <1>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_VDD_1";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
		zephyr,input-positive = <(((1 + 8) << 4) | 0)>; // YP = PB0
	};

	resistive_touch: resistive_touch {
		compatible = "resistive-touchscreen-4wire";
		poll-period-ms = <15>;
		h-res = <240>;
		v-res = <320>;
		x-min = <355>;
		x-max = <3422>;
		y-min = <301>;
		y-max = <3335>;
		r-xplate = <200>;
		r-touch-threshold = "600.0";
		xm-gpios = <&gpiob 2 GPIO_ACTIVE_HIGH>;
		xp-gpios = <&gpiod 2 GPIO_ACTIVE_HIGH>;
		ym-gpios = <&gpiob 3 GPIO_ACTIVE_HIGH>;
		yp-gpios = <&gpiob 0 GPIO_ACTIVE_HIGH>;
		XM {
			io-channels = <&adc0 0>;
			zephyr,wire = <INPUT_4WIRE_TS_XM>;
		};

		YP {
			io-channels = <&adc0 1>;
			zephyr,wire = <INPUT_4WIRE_TS_YP>;
		};
	};
};

&usart0 {
	/delete-property/ current-speed;
	compatible = "silabs,gecko-spi-usart";
	pinctrl-0 = <&eusart1_default>;
	pinctrl-names = "default";
	reg = <0x5005C000 0x306c>;
	#address-cells = <1>;
	#size-cells = <0>;
	interrupts = <9 0>, <10 0>;
	interrupt-names = "rx", "tx";
	status = "okay";
	clock-frequency = <18000000>;
	cs-gpios = <&gpioa 7 GPIO_ACTIVE_LOW>, <&gpioa 5 GPIO_ACTIVE_LOW>;
  
	icm20689@0 {
		compatible = "invensense,icm20689";
		spi-max-frequency = <2400000>;
		reg = <0>;
		int-gpios = <&gpiob 1 GPIO_ACTIVE_HIGH>;
		accel-bw = <1046>;
		accel-fs = <2>;
		gyro-bw = <41>;
		gyro-fs = <250>;
		status = "okay";
	};
  
};

&pinctrl {
	eusart1_default: eusart1_default {
		group1 {
			psels = <GECKO_PSEL(SPI_SCK, C, 1)>,
				<GECKO_PSEL(SPI_MOSI, C, 3)>,
				<GECKO_PSEL(SPI_MISO, C, 2)>;
		};
	};

	usart0_default: usart0_default {
		group1 {
			/* configure PD.5 as UART_RX and PD.4 as UART_TX */
			psels = <GECKO_PSEL(UART_TX, D, 4)>,
				<GECKO_PSEL(UART_RX, D, 5)>,
				<GECKO_LOC(UART, 0)>;
		};
	};
};

&i2c0 {
	status = "okay";

	veml6035: veml6035@29 {
		compatible = "vishay,veml7700";
		reg = <0x29>;
		status = "okay";
	};

	si7210: si7210@30 {
		compatible = "silabs,si7210";
		reg = <0x30>;
		status = "okay";
	};

	si7021: si7021@40 {
		compatible = "silabs,si7006";
		reg = <0x40>;
		status = "okay";
	};
	bmp384: bmp384@77 {
		compatible = "bosch,bmp384";
		reg = <0x77>;
		status = "okay";
	};
};

&sensor_enable {
	startup-delay-us = <100000>;
	status = "okay";
};

